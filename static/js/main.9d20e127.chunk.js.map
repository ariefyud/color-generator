{"version":3,"sources":["SingleColor.js","BasicColors.js","App.js","index.js"],"names":["SingleColor","rgb","weight","index","hexColor","useState","alert","setAlert","bg","join","hexValue","useEffect","timeout","setTimeout","clearTimeout","className","style","backgroundColor","onClick","navigator","clipboard","writeText","BasicColors","color","App","setColor","error","setError","Values","all","list","setList","onSubmit","e","preventDefault","colors","type","value","onChange","target","placeholder","map","hex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAgCeA,EA9BK,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EAC9BC,oBAAS,GADqB,mBACjDC,EADiD,KAC1CC,EAD0C,KAGlDC,EAAKP,EAAIQ,KAAK,KACdC,EAAQ,WAAON,GAUrB,OARAO,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBN,GAAS,KACR,KAEH,OAAO,kBAAMO,aAAaF,MACzB,CAACN,IAGF,0BACES,UAAS,gBAAWZ,EAAQ,IAAM,eAClCa,MAAO,CAAEC,gBAAgB,OAAD,OAAST,EAAT,MACxBU,QAAS,WACPX,GAAS,GACTY,UAAUC,UAAUC,UAAUX,IALlC,UAQE,oBAAGK,UAAU,gBAAb,UAA8Bb,EAA9B,OACA,mBAAGa,UAAU,cAAb,SAA4BL,IAC3BJ,GAAS,mBAAGS,UAAU,QAAb,qCCQDO,EAjCK,WAClB,OACE,mCACE,0BAASP,UAAU,eAAnB,UACE,qBAAKA,UAAU,QAAQC,MAAO,CAAEC,gBAAiB,WAAjD,SACE,mBAAGD,MAAO,CAAEO,MAAO,WAAnB,uBAEF,qBAAKR,UAAU,QAAQC,MAAO,CAAEC,gBAAiB,WAAjD,SACE,0CAEF,qBAAKF,UAAU,MAAMC,MAAO,CAAEC,gBAAiB,WAA/C,SACE,mBAAGD,MAAO,CAAEO,MAAO,WAAnB,uBAEF,qBAAKR,UAAU,OAAOC,MAAO,CAAEC,gBAAiB,WAAhD,SACE,0CAEF,qBAAKF,UAAU,OAAOC,MAAO,CAAEC,gBAAiB,WAAhD,SACE,mBAAGD,MAAO,CAAEO,MAAO,WAAnB,uBAEF,qBAAKR,UAAU,SAASC,MAAO,CAAEC,gBAAiB,WAAlD,SACE,0CAEF,qBAAKF,UAAU,OAAOC,MAAO,CAAEC,gBAAiB,WAAhD,SACE,0CAEF,qBAAKF,UAAU,UAAUC,MAAO,CAAEC,gBAAiB,WAAnD,SACE,mBAAGD,MAAO,CAAEO,MAAO,WAAnB,6B,gBCyBKC,MA/Cf,WAAgB,IAAD,EACanB,mBAAS,IADtB,mBACNkB,EADM,KACCE,EADD,OAEapB,oBAAS,GAFtB,mBAENqB,EAFM,KAECC,EAFD,OAGWtB,mBAAS,IAAIuB,IAAO,WAAWC,IAAI,KAH9C,mBAGNC,EAHM,KAGAC,EAHA,KAeb,OACE,qCACE,0BAAShB,UAAU,YAAnB,UACE,oBAAIA,UAAU,YAAd,6BACA,uBAAMiB,SAdS,SAAAC,GACnBA,EAAEC,iBACF,IACE,IAAIC,EAAS,IAAIP,IAAOL,GAAOM,IAAI,IACnCE,EAAQI,GACR,MAAOT,GACPC,GAAS,KAQP,UAEE,uBACES,KAAK,OACLC,MAAOd,EACPe,SAAU,SAAAL,GAAC,OAAIR,EAASQ,EAAEM,OAAOF,QACjCG,YAAY,UACZzB,UAAS,UAAKW,EAAQ,QAAU,QAElC,wBAAQX,UAAU,MAAMqB,KAAK,SAA7B,0BAKJ,oBAAIrB,UAAU,cAAd,2BACA,cAAC,EAAD,IACA,yBAASA,UAAU,SAAnB,SACGe,EAAKW,KAAI,SAAClB,EAAOpB,GAIhB,OAAO,cAAC,EAAD,2BAA6BoB,GAA7B,IAAoCpB,MAAOA,EAAOC,SAAUmB,EAAMmB,MAAhDvC,YCzCnCwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9d20e127.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst SingleColor = ({ rgb, weight, index, hexColor }) => {\r\n  const [alert, setAlert] = useState(false)\r\n  // Join array value separate with ','\r\n  const bg = rgb.join(',')\r\n  const hexValue = `#${hexColor}`\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setAlert(false)\r\n    }, 500)\r\n    // Clear alert after 1000 millisecond\r\n    return () => clearTimeout(timeout)\r\n  }, [alert])\r\n\r\n  return (\r\n    <article\r\n      className={`color ${index > 10 && 'color-light'}`}\r\n      style={{ backgroundColor: `rgb(${bg})` }}\r\n      onClick={() => {\r\n        setAlert(true)\r\n        navigator.clipboard.writeText(hexValue) //This will copy hex value to the clipboard\r\n      }}\r\n    >\r\n      <p className='percent-value'>{weight}%</p>\r\n      <p className='color-value'>{hexValue}</p>\r\n      {alert && <p className='alert'>copied to clipboard</p>}\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default SingleColor\r\n","import React from 'react'\r\n\r\nconst BasicColors = () => {\r\n  return (\r\n    <>\r\n      <section className='basic-colors'>\r\n        <div className='black' style={{ backgroundColor: '#000000' }}>\r\n          <p style={{ color: '#ffffff' }}>#000000</p>\r\n        </div>\r\n        <div className='white' style={{ backgroundColor: '#ffffff' }}>\r\n          <p>#ffffff</p>\r\n        </div>\r\n        <div className='red' style={{ backgroundColor: '#ff0000' }}>\r\n          <p style={{ color: '#ffffff' }}>#ff0000</p>\r\n        </div>\r\n        <div className='lime' style={{ backgroundColor: '#00ff00' }}>\r\n          <p>#00ff00</p>\r\n        </div>\r\n        <div className='blue' style={{ backgroundColor: '#0000ff' }}>\r\n          <p style={{ color: '#ffffff' }}>#0000ff</p>\r\n        </div>\r\n        <div className='yellow' style={{ backgroundColor: '#fff000' }}>\r\n          <p>#fff000</p>\r\n        </div>\r\n        <div className='cyan' style={{ backgroundColor: '#00ffff' }}>\r\n          <p>#00ffff</p>\r\n        </div>\r\n        <div className='magenta' style={{ backgroundColor: '#ff00ff' }}>\r\n          <p style={{ color: '#ffffff' }}>#ff00ff</p>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BasicColors\r\n","import React, { useState } from 'react'\r\nimport SingleColor from './SingleColor'\r\nimport BasicColors from './BasicColors'\r\n\r\nimport Values from 'values.js'\r\n\r\nfunction App() {\r\n  const [color, setColor] = useState('')\r\n  const [error, setError] = useState(false)\r\n  const [list, setList] = useState(new Values('#dc143c').all(10))\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    try {\r\n      let colors = new Values(color).all(10) //tint and shade 100% divided by 10\r\n      setList(colors)\r\n    } catch (error) {\r\n      setError(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className='container'>\r\n        <h3 className='container'>Color Generator</h3>\r\n        <form onSubmit={handleSubmit}>\r\n          {/* Input value will change color state value */}\r\n          <input\r\n            type='text'\r\n            value={color}\r\n            onChange={e => setColor(e.target.value)}\r\n            placeholder='#000000'\r\n            className={`${error ? 'error' : null}`}\r\n          />\r\n          <button className='btn' type='submit'>\r\n            submit\r\n          </button>\r\n        </form>\r\n      </section>\r\n      <h4 className='basic-color'>Basic Colors:</h4>\r\n      <BasicColors />\r\n      <section className='colors'>\r\n        {list.map((color, index) => {\r\n          {\r\n            /* Spread operator will pass all rest properties*/\r\n          }\r\n          return <SingleColor key={index} {...color} index={index} hexColor={color.hex} />\r\n        })}\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}